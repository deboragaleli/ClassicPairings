{"ast":null,"code":"import _classCallCheck from \"/Users/deboragaleli/Documents/DeborasWork/ClassicPairings/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/deboragaleli/Documents/DeborasWork/ClassicPairings/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport auth0 from 'auth0-js';\nimport history from './history';\n\nvar Auth =\n/*#__PURE__*/\nfunction () {\n  function Auth() {\n    _classCallCheck(this, Auth);\n\n    this.auth0 = new auth0.WebAuth({\n      domain: 'classicpairings.auth0.com',\n      clientID: 'TG6iRWyjS2GSTnqkLqhEu0Sb0L0nj515',\n      redirectUri: 'http://localhost:3000/wines',\n      responseType: 'token id_token',\n      scope: 'openid profile'\n    });\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n    this.handleAuthentication = this.handleAuthentication.bind(this);\n    this.isAuthenticated = this.isAuthenticated.bind(this);\n  }\n\n  _createClass(Auth, [{\n    key: \"login\",\n    value: function login(username, password) {\n      console.log('Login authorize', username, password);\n      this.auth0.login({\n        realm: 'Username-Password-Authentication',\n        username: username,\n        password: password\n      }, function (err, authResult) {\n        console.log('authResult', authResult);\n\n        if (err) {\n          console.log('err', err);\n          alert(\"Error: \".concat(err.description));\n          return;\n        }\n      });\n    }\n  }, {\n    key: \"signup\",\n    value: function signup(email, password) {\n      var _this = this;\n\n      console.log('SignUp');\n      this.auth0.signup({\n        connection: 'Username-Password-Authentication',\n        email: email,\n        password: password\n      }, function (err) {\n        if (err) {\n          console.log(err);\n\n          if (err.code === 'invalid_password') {\n            alert('Invalid Password');\n          } else {\n            alert(\"Error: \".concat(err.description));\n          }\n\n          return;\n        }\n\n        _this.login(email, password);\n      });\n    }\n  }, {\n    key: \"handleAuthentication\",\n    value: function handleAuthentication() {\n      var _this2 = this;\n\n      console.log('handleAuthentication');\n      this.auth0.parseHash(function (err, authResult) {\n        console.log('authResult');\n\n        if (authResult && authResult.accessToken && authResult.idToken) {\n          _this2.setSession(authResult);\n\n          history.replace('/wines');\n        } else if (err) {\n          history.replace('/wines');\n          console.log(err);\n        }\n      });\n    }\n  }, {\n    key: \"setSession\",\n    value: function setSession(authResult) {\n      console.log('setSession'); // Set the time that the Access Token will expire at\n\n      var expiresAt = JSON.stringify(authResult.expiresIn * 1000 + new Date().getTime());\n      localStorage.setItem('access_token', authResult.accessToken);\n      localStorage.setItem('id_token', authResult.idToken);\n      localStorage.setItem('expires_at', expiresAt); // navigate to the home route\n\n      history.replace('/');\n    }\n  }, {\n    key: \"logout\",\n    value: function logout() {\n      // Clear Access Token and ID Token from local storage\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('id_token');\n      localStorage.removeItem('expires_at'); // navigate to the home route\n\n      history.replace('/');\n    }\n  }, {\n    key: \"isAuthenticated\",\n    value: function isAuthenticated() {\n      // Check whether the current time is past the\n      // Access Token's expiry time\n      var expiresAt = JSON.parse(localStorage.getItem('expires_at'));\n      return new Date().getTime() < expiresAt;\n    }\n  }]);\n\n  return Auth;\n}();\n\nexport { Auth as default };","map":{"version":3,"sources":["/Users/deboragaleli/Documents/DeborasWork/ClassicPairings/src/Auth.js"],"names":["auth0","history","Auth","WebAuth","domain","clientID","redirectUri","responseType","scope","login","bind","logout","handleAuthentication","isAuthenticated","username","password","console","log","realm","err","authResult","alert","description","email","signup","connection","code","parseHash","accessToken","idToken","setSession","replace","expiresAt","JSON","stringify","expiresIn","Date","getTime","localStorage","setItem","removeItem","parse","getItem"],"mappings":"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","sourcesContent":["import auth0 from 'auth0-js';\nimport history from './history';\n\nexport default class Auth {\n auth0 = new auth0.WebAuth({\n   domain: 'classicpairings.auth0.com',\n   clientID: 'TG6iRWyjS2GSTnqkLqhEu0Sb0L0nj515',\n   redirectUri: 'http://localhost:3000/wines',\n   responseType: 'token id_token',\n   scope: 'openid profile'\n });\n\n constructor() {\n   this.login = this.login.bind(this);\n   this.logout = this.logout.bind(this);\n   this.handleAuthentication = this.handleAuthentication.bind(this);\n   this.isAuthenticated = this.isAuthenticated.bind(this);\n }\n\n login(username, password) {\n   console.log('Login authorize', username, password);\n   this.auth0.login(\n     { realm: 'Username-Password-Authentication', username, password },\n     (err, authResult) => {\n       console.log('authResult', authResult);\n       if (err) {\n         console.log('err', err);\n         alert(`Error: ${err.description}`);\n         return;\n       }\n     }\n   );\n }\n\n signup(email, password) {\n   console.log('SignUp');\n   this.auth0.signup(\n     { connection: 'Username-Password-Authentication', email, password },\n     (err) => {\n       if (err) {\n         console.log(err);\n\n         if(err.code === 'invalid_password' ) {\n           alert('Invalid Password');\n         } else {\n           alert(`Error: ${err.description}`);\n         }\n\n\n         return;\n       }\n\n       this.login(email, password);\n\n     }\n   );\n }\n\n handleAuthentication() {\n   console.log('handleAuthentication');\n   this.auth0.parseHash((err, authResult) => {\n     console.log('authResult')\n     if (authResult && authResult.accessToken && authResult.idToken) {\n       this.setSession(authResult);\n       history.replace('/wines');\n     } else if (err) {\n       history.replace('/wines');\n       console.log(err);\n     }\n   });\n }\n\n setSession(authResult) {\n   console.log('setSession');\n   // Set the time that the Access Token will expire at\n   let expiresAt = JSON.stringify((authResult.expiresIn * 1000) + new Date().getTime());\n   localStorage.setItem('access_token', authResult.accessToken);\n   localStorage.setItem('id_token', authResult.idToken);\n   localStorage.setItem('expires_at', expiresAt);\n   // navigate to the home route\n   history.replace('/');\n }\n\n logout() {\n   // Clear Access Token and ID Token from local storage\n   localStorage.removeItem('access_token');\n   localStorage.removeItem('id_token');\n   localStorage.removeItem('expires_at');\n   // navigate to the home route\n   history.replace('/');\n }\n\n isAuthenticated() {\n   // Check whether the current time is past the\n   // Access Token's expiry time\n   let expiresAt = JSON.parse(localStorage.getItem('expires_at'));\n   return new Date().getTime() < expiresAt;\n }\n}\n"]},"metadata":{},"sourceType":"module"}